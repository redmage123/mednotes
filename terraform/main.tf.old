
module "client_connectivity_service" {
    name = var.name
    image = "python:${var.image_version}"
    port = var.port
    command = var.command
    source = "/home/bbrelin/src/repos/mednotes/app/Microservices/client_connectivity_sdrvice"
}

resource "kubernetes_pod" "client_connectivity_service_pod" {
  metadata {
    name = module.client_connectivity__service.name
  }

  spec {
    container {
      name  = module.client_connectivity_service.name
      image = module.client_connectivity_service.image

      # Define the port mapping for the container
      port {
        name = "http"
        container_port = module.client_connectivity_service.port
      }

      command = module.client_connectivity_service.command
    }
  }
}

resource "kubernetes_service" "client_connectivity_service_service" {
  metadata {
    name = module.client_connectivity_service.name
  }

  spec {
    selector = {
      app = module.client_connectivity_service.name
    }

    # Define the service port mapping
    port {
      name = "http"
      port = module.client_connectivity_service.port
      target_port = "http"
    }

    type = "ClusterIP"
  }
}

terraform {
  required_providers {
    kubernetes = {
      source = "hashicorp/kubernetes"
    }
  }
}

